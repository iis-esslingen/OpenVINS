FROM osrf/ros:noetic-desktop-full

# Use bash as shell.
SHELL ["/bin/bash", "-c"]

#########################################################################################################
# Create a non-root user:                                                                               #
# - https://code.visualstudio.com/remote/advancedcontainers/add-nonroot-user#_creating-a-nonroot-user.  #
#########################################################################################################
ARG USERNAME=developer
ARG USER_UID=1000
ARG USER_GID=${USER_UID}

RUN groupadd --gid ${USER_GID} ${USERNAME} && \
    useradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} && \
    apt-get update && \
    apt-get install -y sudo && \
    echo ${USERNAME} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} && \
    chmod 0440 /etc/sudoers.d/${USERNAME}

# Activate the previously created user.
USER ${USERNAME}
# Set our working directory.
WORKDIR "/catkin_ws"
# Ensure we can read/write to the working directory.
RUN sudo chmod a+rwx .

#########################################################################################################
# Update and install required dependencies.                                                             #
#########################################################################################################
RUN sudo apt-get update && sudo apt-get upgrade -y && \
    sudo apt-get install -y --no-install-recommends \
        nano \
        git \
        python3-dev \
        python3-matplotlib \
        python3-numpy \
        python3-psutil \
        python3-tk \
        python3-catkin-tools \
        python3-osrf-pycommon \
        cmake \
        libgoogle-glog-dev \
        libgflags-dev \
        libatlas-base-dev \
        libeigen3-dev \
        libsuitesparse-dev \
        libceres-dev && \
    # Perform cleanup.
    rm -rf "/var/lib/apt/lists/*" && \
    sudo apt-get clean

COPY "." "src"

# Ensure owner/permissions are set correctly for the copied files.
RUN sudo chown -R ${USERNAME}:${USERNAME} "src" && \
    chmod +x "./src/docker/entrypoint.bash"

#########################################################################################################
# Set up ROS and the catkin workspace.                                                                  #
#########################################################################################################

# Automatic sourcing of ROS distribution.
RUN echo "source /opt/ros/noetic/setup.bash" >> "/home/${USERNAME}/.bashrc" && \
    # Automatic sourcing of catkin workspace.
    echo "[ -f /catkin_ws/devel/setup.bash ] && source /catkin_ws/devel/setup.bash" >> "/home/${USERNAME}/.bashrc" && \
    # Build the catkin workspace.
    source "/opt/ros/noetic/setup.bash" && \
    # Use half the amount of physical cores to build.
    catkin build -j$(($(egrep '^core id' /proc/cpuinfo | uniq | wc -l) / 2))

ENTRYPOINT ["./src/docker/entrypoint.bash"]